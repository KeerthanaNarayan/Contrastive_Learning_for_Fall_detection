# -*- coding: utf-8 -*-
"""Visualization_Help.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZWGRTNiYZ1IDhv0lYfdzGl2Jvtmibgza
"""

import pandas as pd
data =pd.read_csv('raw182_Training_Relabeled_Auto_25.csv', encoding='latin-1')

data

from collections import Counter

d= Counter(data['outcome'])

d

import matplotlib.pyplot as plt

plt.bar(d.keys(), d.values())

plt.show()

import pandas as pd
it1_acc=[0.8712,  0.8832, 0.8830, 0.8958]
it1_rec=[0.1154, 0.1102, 0.1989, 0.3197]
it2_acc=[0.8702, 0.8740, 0.8910, 0]
it2_rec=[0.2070, 0.1620, 0.2752, 0]
it3_acc=[0.8785, 0.8785, 0.8905, 0]
it3_rec=[0.1023, 0.1304, 0.2960, 0]
avg_acc=[0.8733333333333332, 0.8785833333333333, 0.8881666666666667, 0]
avg_rec=[0.14155829550566393, 0.13419172736950905, 0.2566781463889553, 0]

data = {
    'Training Data Size': [800, 3200, 5600, 8000],
    'Iteration 1 Accuracy': it1_acc,
    'Iteration 1 Recall': it1_rec,
    'Iteration 2 Accuracy': it2_acc,
    'Iteration 2 Recall': it2_rec,
    'Iteration 3 Accuracy': it3_acc,
    'Iteration 3 Recall': it3_rec,
    'Average Accuracy': avg_acc,
    'Average Recall': avg_rec
}

df = pd.DataFrame(data)

df

import matplotlib.pyplot as plt
training_data_size = [800,3200,5600,8000]
# Line graph of Accuracies over Different Training Data Sizes
plt.figure(figsize=(10, 6))
plt.plot(training_data_size, it1_acc, marker='o', label='Iteration 1')
plt.plot(training_data_size, it2_acc, marker='o', label='Iteration 2')
plt.plot(training_data_size, it3_acc, marker='o', label='Iteration 3')
plt.plot(training_data_size, avg_acc, marker='o', label='Average Accuracy')
# plt.plot(training_data_size, avg_rec, marker='o', color='r', label='Average Recall')
plt.xlabel('Training Data Size')
plt.ylabel('Score')
plt.title('Training Data Size vs Accuracies')
plt.xticks(training_data_size)
plt.legend()
plt.grid(True)
plt.show()

# Line graph of Recalls over Different Training Data Sizes
plt.figure(figsize=(10, 6))
plt.plot(training_data_size, it1_rec, marker='o', label='Iteration 1')
plt.plot(training_data_size, it2_rec, marker='o', label='Iteration 2')
plt.plot(training_data_size, it3_rec, marker='o', label='Iteration 3')
plt.plot(training_data_size, avg_rec, marker='o', label='Average Recall')
# plt.plot(training_data_size, avg_rec, marker='o', color='r', label='Average Recall')
plt.xlabel('Training Data Size')
plt.ylabel('Score')
plt.title('Training Data Size vs Recalls')
plt.xticks(training_data_size)
plt.legend()
plt.grid(True)
plt.show()

